name: Build Plugin

on:
  push:
    branches:
      - master
      - new_workflow
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.github/workflows/icons.yml'
      - '.github/workflows/publish.yml'
      - 'generate/**'
      - 'package.json'
      - 'package-lock.json'
      - 'builder_config.json'
      - 'tsconfig.json'

jobs:
  test:
    name: Testing plugin (frontend)
    runs-on: ubuntu-24.04-arm

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: "8.1.1"

      - name: Test plugin
        run: gradle runPluginVerifier

  build:
    name: Build plugin
    runs-on: ubuntu-24.04-arm

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: "8.1.1"

      - name: Create token directory
        run: mkdir -p ./token

      - name: Create and write to chain.crt file
        run: echo "${{ secrets.CHAIN_CRT_CONTENTS }}" | base64 --decode > ./token/chain.crt

      - name: Create and write to private.pem file
        run: echo "${{ secrets.PRIVATE_PEM_CONTENTS }}" | base64 --decode > ./token/private.pem

      - name: Build plugin
        run: gradle buildPlugin
        env:
          PRIVATE_KEY_PASSWORD: ${{ secrets.PRIVATE_KEY_PASSWORD }}

      - name: Sign plugin
        run: gradle signPlugin
        env:
          PRIVATE_KEY_PASSWORD: ${{ secrets.PRIVATE_KEY_PASSWORD }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Plugin
          path: build/distributions/cat-activity-*.zip
